from sqlalchemy import Column, Integer, String, Text, Boolean, Enum as SAEnum
from app.db.database import Base
from app.enums.enums import ErrorTypeEnum
from time import time


class ErrorEntity(Base):
    __tablename__ = "scrape_failures"

    id = Column(Integer, primary_key=True, index=True, autoincrement=True)
    failure_type = Column(
        SAEnum(
            ErrorTypeEnum,
            name="ErrorTypeEnum",  # align with existing PG enum type
            create_type=False                           # disable autogenerated enum creation
        ),
        nullable=False
    )
    media_name = Column(String, nullable=True)
    url = Column(Text, nullable=True)
    reason = Column(Text, nullable=True)
    timestamp = Column(Integer, default=lambda: int(time()))
    resolved = Column(Boolean, default=False)